/*
 * generated by Xtext 2.12.0
 */
package de.seronet_projekt.ros.interfaces.pool.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RosInterfacesPoolGrammarAccess extends AbstractGrammarElementFinder {
	
	public class RosInterfacesPoolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosInterfacesPool");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRosInterfacesPoolAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRosInterfacesPoolKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInterfacesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInterfacesRosInterfaceParserRuleCall_3_0 = (RuleCall)cInterfacesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RosInterfacesPool:
		//	{RosInterfacesPool}
		//	'RosInterfacesPool'
		//	'{'
		//	interfaces+=RosInterface*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RosInterfacesPool} 'RosInterfacesPool' '{' interfaces+=RosInterface* '}'
		public Group getGroup() { return cGroup; }
		
		//{RosInterfacesPool}
		public Action getRosInterfacesPoolAction_0() { return cRosInterfacesPoolAction_0; }
		
		//'RosInterfacesPool'
		public Keyword getRosInterfacesPoolKeyword_1() { return cRosInterfacesPoolKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//interfaces+=RosInterface*
		public Assignment getInterfacesAssignment_3() { return cInterfacesAssignment_3; }
		
		//RosInterface
		public RuleCall getInterfacesRosInterfaceParserRuleCall_3_0() { return cInterfacesRosInterfaceParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RosInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosInterface");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRosTopicParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRosServiceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRosActionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//RosInterface:
		//	RosTopic | RosService | RosAction;
		@Override public ParserRule getRule() { return rule; }
		
		//RosTopic | RosService | RosAction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RosTopic
		public RuleCall getRosTopicParserRuleCall_0() { return cRosTopicParserRuleCall_0; }
		
		//RosService
		public RuleCall getRosServiceParserRuleCall_1() { return cRosServiceParserRuleCall_1; }
		
		//RosAction
		public RuleCall getRosActionParserRuleCall_2() { return cRosActionParserRuleCall_2; }
	}
	public class RosTopicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosTopic");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRosPublisherParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRosSubscriberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RosTopic:
		//	RosPublisher | RosSubscriber;
		@Override public ParserRule getRule() { return rule; }
		
		//RosPublisher | RosSubscriber
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RosPublisher
		public RuleCall getRosPublisherParserRuleCall_0() { return cRosPublisherParserRuleCall_0; }
		
		//RosSubscriber
		public RuleCall getRosSubscriberParserRuleCall_1() { return cRosSubscriberParserRuleCall_1; }
	}
	public class RosServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosService");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRosSrvServerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRosSrvClientParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RosService:
		//	RosSrvServer | RosSrvClient;
		@Override public ParserRule getRule() { return rule; }
		
		//RosSrvServer | RosSrvClient
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RosSrvServer
		public RuleCall getRosSrvServerParserRuleCall_0() { return cRosSrvServerParserRuleCall_0; }
		
		//RosSrvClient
		public RuleCall getRosSrvClientParserRuleCall_1() { return cRosSrvClientParserRuleCall_1; }
	}
	public class RosActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRosActionServerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRosActionClientParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RosAction:
		//	RosActionServer | RosActionClient;
		@Override public ParserRule getRule() { return rule; }
		
		//RosActionServer | RosActionClient
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RosActionServer
		public RuleCall getRosActionServerParserRuleCall_0() { return cRosActionServerParserRuleCall_0; }
		
		//RosActionClient
		public RuleCall getRosActionClientParserRuleCall_1() { return cRosActionClientParserRuleCall_1; }
	}
	public class RosPublisherElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosPublisher");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRosPublisherKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTopicNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTopicNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTopicNameEStringParserRuleCall_4_0 = (RuleCall)cTopicNameAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeEStringParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RosPublisher:
		//	'RosPublisher' name=ID
		//	'{'
		//	'topicName' topicName=EString
		//	'type' type=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RosPublisher' name=ID '{' 'topicName' topicName=EString 'type' type=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'RosPublisher'
		public Keyword getRosPublisherKeyword_0() { return cRosPublisherKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'topicName'
		public Keyword getTopicNameKeyword_3() { return cTopicNameKeyword_3; }
		
		//topicName=EString
		public Assignment getTopicNameAssignment_4() { return cTopicNameAssignment_4; }
		
		//EString
		public RuleCall getTopicNameEStringParserRuleCall_4_0() { return cTopicNameEStringParserRuleCall_4_0; }
		
		//'type'
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }
		
		//type=EString
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_6_0() { return cTypeEStringParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RosSubscriberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosSubscriber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRosSubscriberKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTopicNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTopicNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTopicNameEStringParserRuleCall_4_0 = (RuleCall)cTopicNameAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeEStringParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RosSubscriber:
		//	'RosSubscriber' name=ID
		//	'{'
		//	'topicName' topicName=EString
		//	'type' type=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RosSubscriber' name=ID '{' 'topicName' topicName=EString 'type' type=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'RosSubscriber'
		public Keyword getRosSubscriberKeyword_0() { return cRosSubscriberKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'topicName'
		public Keyword getTopicNameKeyword_3() { return cTopicNameKeyword_3; }
		
		//topicName=EString
		public Assignment getTopicNameAssignment_4() { return cTopicNameAssignment_4; }
		
		//EString
		public RuleCall getTopicNameEStringParserRuleCall_4_0() { return cTopicNameEStringParserRuleCall_4_0; }
		
		//'type'
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }
		
		//type=EString
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_6_0() { return cTypeEStringParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RosSrvServerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosSrvServer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRosSrvServerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSrvNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSrvNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSrvNameEStringParserRuleCall_4_0 = (RuleCall)cSrvNameAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeEStringParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RosSrvServer:
		//	'RosSrvServer' name=ID
		//	'{'
		//	'srvName' srvName=EString
		//	'type' type=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RosSrvServer' name=ID '{' 'srvName' srvName=EString 'type' type=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'RosSrvServer'
		public Keyword getRosSrvServerKeyword_0() { return cRosSrvServerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'srvName'
		public Keyword getSrvNameKeyword_3() { return cSrvNameKeyword_3; }
		
		//srvName=EString
		public Assignment getSrvNameAssignment_4() { return cSrvNameAssignment_4; }
		
		//EString
		public RuleCall getSrvNameEStringParserRuleCall_4_0() { return cSrvNameEStringParserRuleCall_4_0; }
		
		//'type'
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }
		
		//type=EString
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_6_0() { return cTypeEStringParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RosSrvClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosSrvClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRosSrvClientKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSrvNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSrvNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSrvNameEStringParserRuleCall_4_0 = (RuleCall)cSrvNameAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeEStringParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RosSrvClient:
		//	'RosSrvClient' name=ID
		//	'{'
		//	'srvName' srvName=EString
		//	'type' type=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RosSrvClient' name=ID '{' 'srvName' srvName=EString 'type' type=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'RosSrvClient'
		public Keyword getRosSrvClientKeyword_0() { return cRosSrvClientKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'srvName'
		public Keyword getSrvNameKeyword_3() { return cSrvNameKeyword_3; }
		
		//srvName=EString
		public Assignment getSrvNameAssignment_4() { return cSrvNameAssignment_4; }
		
		//EString
		public RuleCall getSrvNameEStringParserRuleCall_4_0() { return cSrvNameEStringParserRuleCall_4_0; }
		
		//'type'
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }
		
		//type=EString
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_6_0() { return cTypeEStringParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RosActionServerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosActionServer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRosActionServerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cActionNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActionNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActionNameEStringParserRuleCall_4_0 = (RuleCall)cActionNameAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeEStringParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RosActionServer:
		//	'RosActionServer' name=ID
		//	'{'
		//	'actionName' actionName=EString
		//	'type' type=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RosActionServer' name=ID '{' 'actionName' actionName=EString 'type' type=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'RosActionServer'
		public Keyword getRosActionServerKeyword_0() { return cRosActionServerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'actionName'
		public Keyword getActionNameKeyword_3() { return cActionNameKeyword_3; }
		
		//actionName=EString
		public Assignment getActionNameAssignment_4() { return cActionNameAssignment_4; }
		
		//EString
		public RuleCall getActionNameEStringParserRuleCall_4_0() { return cActionNameEStringParserRuleCall_4_0; }
		
		//'type'
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }
		
		//type=EString
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_6_0() { return cTypeEStringParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RosActionClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.RosActionClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRosActionClientKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cActionNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActionNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActionNameEStringParserRuleCall_4_0 = (RuleCall)cActionNameAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeEStringParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RosActionClient:
		//	'RosActionClient' name=ID
		//	'{'
		//	'actionName' actionName=EString
		//	'type' type=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RosActionClient' name=ID '{' 'actionName' actionName=EString 'type' type=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'RosActionClient'
		public Keyword getRosActionClientKeyword_0() { return cRosActionClientKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'actionName'
		public Keyword getActionNameKeyword_3() { return cActionNameKeyword_3; }
		
		//actionName=EString
		public Assignment getActionNameAssignment_4() { return cActionNameAssignment_4; }
		
		//EString
		public RuleCall getActionNameEStringParserRuleCall_4_0() { return cActionNameEStringParserRuleCall_4_0; }
		
		//'type'
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }
		
		//type=EString
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_6_0() { return cTypeEStringParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool.EString");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	
	
	private final RosInterfacesPoolElements pRosInterfacesPool;
	private final RosInterfaceElements pRosInterface;
	private final RosTopicElements pRosTopic;
	private final RosServiceElements pRosService;
	private final RosActionElements pRosAction;
	private final RosPublisherElements pRosPublisher;
	private final RosSubscriberElements pRosSubscriber;
	private final RosSrvServerElements pRosSrvServer;
	private final RosSrvClientElements pRosSrvClient;
	private final RosActionServerElements pRosActionServer;
	private final RosActionClientElements pRosActionClient;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RosInterfacesPoolGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRosInterfacesPool = new RosInterfacesPoolElements();
		this.pRosInterface = new RosInterfaceElements();
		this.pRosTopic = new RosTopicElements();
		this.pRosService = new RosServiceElements();
		this.pRosAction = new RosActionElements();
		this.pRosPublisher = new RosPublisherElements();
		this.pRosSubscriber = new RosSubscriberElements();
		this.pRosSrvServer = new RosSrvServerElements();
		this.pRosSrvClient = new RosSrvClientElements();
		this.pRosActionServer = new RosActionServerElements();
		this.pRosActionClient = new RosActionClientElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.seronet_projekt.ros.interfaces.pool.RosInterfacesPool".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RosInterfacesPool:
	//	{RosInterfacesPool}
	//	'RosInterfacesPool'
	//	'{'
	//	interfaces+=RosInterface*
	//	'}';
	public RosInterfacesPoolElements getRosInterfacesPoolAccess() {
		return pRosInterfacesPool;
	}
	
	public ParserRule getRosInterfacesPoolRule() {
		return getRosInterfacesPoolAccess().getRule();
	}
	
	//RosInterface:
	//	RosTopic | RosService | RosAction;
	public RosInterfaceElements getRosInterfaceAccess() {
		return pRosInterface;
	}
	
	public ParserRule getRosInterfaceRule() {
		return getRosInterfaceAccess().getRule();
	}
	
	//RosTopic:
	//	RosPublisher | RosSubscriber;
	public RosTopicElements getRosTopicAccess() {
		return pRosTopic;
	}
	
	public ParserRule getRosTopicRule() {
		return getRosTopicAccess().getRule();
	}
	
	//RosService:
	//	RosSrvServer | RosSrvClient;
	public RosServiceElements getRosServiceAccess() {
		return pRosService;
	}
	
	public ParserRule getRosServiceRule() {
		return getRosServiceAccess().getRule();
	}
	
	//RosAction:
	//	RosActionServer | RosActionClient;
	public RosActionElements getRosActionAccess() {
		return pRosAction;
	}
	
	public ParserRule getRosActionRule() {
		return getRosActionAccess().getRule();
	}
	
	//RosPublisher:
	//	'RosPublisher' name=ID
	//	'{'
	//	'topicName' topicName=EString
	//	'type' type=EString
	//	'}';
	public RosPublisherElements getRosPublisherAccess() {
		return pRosPublisher;
	}
	
	public ParserRule getRosPublisherRule() {
		return getRosPublisherAccess().getRule();
	}
	
	//RosSubscriber:
	//	'RosSubscriber' name=ID
	//	'{'
	//	'topicName' topicName=EString
	//	'type' type=EString
	//	'}';
	public RosSubscriberElements getRosSubscriberAccess() {
		return pRosSubscriber;
	}
	
	public ParserRule getRosSubscriberRule() {
		return getRosSubscriberAccess().getRule();
	}
	
	//RosSrvServer:
	//	'RosSrvServer' name=ID
	//	'{'
	//	'srvName' srvName=EString
	//	'type' type=EString
	//	'}';
	public RosSrvServerElements getRosSrvServerAccess() {
		return pRosSrvServer;
	}
	
	public ParserRule getRosSrvServerRule() {
		return getRosSrvServerAccess().getRule();
	}
	
	//RosSrvClient:
	//	'RosSrvClient' name=ID
	//	'{'
	//	'srvName' srvName=EString
	//	'type' type=EString
	//	'}';
	public RosSrvClientElements getRosSrvClientAccess() {
		return pRosSrvClient;
	}
	
	public ParserRule getRosSrvClientRule() {
		return getRosSrvClientAccess().getRule();
	}
	
	//RosActionServer:
	//	'RosActionServer' name=ID
	//	'{'
	//	'actionName' actionName=EString
	//	'type' type=EString
	//	'}';
	public RosActionServerElements getRosActionServerAccess() {
		return pRosActionServer;
	}
	
	public ParserRule getRosActionServerRule() {
		return getRosActionServerAccess().getRule();
	}
	
	//RosActionClient:
	//	'RosActionClient' name=ID
	//	'{'
	//	'actionName' actionName=EString
	//	'type' type=EString
	//	'}';
	public RosActionClientElements getRosActionClientAccess() {
		return pRosActionClient;
	}
	
	public ParserRule getRosActionClientRule() {
		return getRosActionClientAccess().getRule();
	}
	
	//EString:
	//	STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
