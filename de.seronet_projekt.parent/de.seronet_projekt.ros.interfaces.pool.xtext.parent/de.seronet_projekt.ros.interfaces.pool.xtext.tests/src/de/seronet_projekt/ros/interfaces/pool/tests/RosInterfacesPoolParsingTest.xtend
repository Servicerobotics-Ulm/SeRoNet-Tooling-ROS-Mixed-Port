/*
 * generated by Xtext 2.23.0
 */
package de.seronet_projekt.ros.interfaces.pool.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import rosInterfacesPool.RosInterfacesPool

@ExtendWith(InjectionExtension)
@InjectWith(RosInterfacesPoolInjectorProvider)
class RosInterfacesPoolParsingTest {
	@Inject
	ParseHelper<RosInterfacesPool> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			RosInterfacesPool {
				RosSubscriber _diagnostics { topicName "/diagnostics" type "diagnostic_msgs.DiagnosticArray" }
				RosSubscriber _joy { topicName "/joy" type "sensor_msgs.Joy" }
			}

		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
